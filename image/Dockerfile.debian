# -------------- Build-time variables --------------
ARG PHP_VERSION="8.0"
# ---------------------------------------------------
### Build PHP base
FROM php:${PHP_VERSION}-fpm

COPY --chown=9000:9000 rootfs /

# BUILD: define build variables
ARG MOVIM_SOURCE="https://github.com/movim/movim"
ARG MOVIM_VERSION="v0.21rc6"
ARG MOVIM_SHA512="5f8732950626db3f6ab723054b1ec4cde9cd790e5fcc05b6f5a7cf6d2f1544a4bb4610ca3ba9b2cc92c7c3326823a68d26bd0b7cac208e076d24572eeb625310"
ARG USER="movim-user"
ARG UID="9000"
ARG GID="9000"

# RUNTIME: define environment variables
ENV MOVIM_HOME="/movim" \
	MOVIM_VERSION="$MOVIM_VERSION"

WORKDIR /tmp/builder

RUN set -x && apt-get update && apt-get upgrade -y \
# BUILD: add build dependencies
		&& apt-get install -qq --no-install-suggests --no-install-recommends \
			tini unzip wget nano \
		&& savedAptMark="$(apt-mark showmanual)" \
		&& apt-get install -qq --no-install-suggests --no-install-recommends \
			libmagickwand-dev \
			libjpeg-dev \
			libpng-dev \
			libwebp-dev \
			libpq-dev \
			libzip-dev \
# BUILD: build and install php dependencies
		&& docker-php-ext-configure gd --with-jpeg=/usr --with-webp=/usr \
		&& docker-php-ext-install -j "$(nproc)" \
			gd \
			mysqli \
			pdo_mysql \
			pdo_pgsql \
			pgsql \
			zip \
		&& pecl install imagick-3.7.0 \
		&& docker-php-ext-enable imagick \
		&& mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" \
# BUILD: download and install movim
		&& curl -o movim.tar.gz -fSL "${MOVIM_SOURCE}/archive/${MOVIM_VERSION}.tar.gz" \
		&& echo "$MOVIM_SHA512 *movim.tar.gz" | sha512sum -c - \
		&& tar -xzf movim.tar.gz -C /tmp \
		&& mv /tmp/movim-* /tmp/movim \
		&& cd /tmp/movim \
		&& curl -sS https://getcomposer.org/installer | php \
		&& php composer.phar install --optimize-autoloader \
		&& mkdir -p ${MOVIM_HOME}/log ${MOVIM_HOME}/cache ${MOVIM_HOME}/public/cache \
		&& ln -s /usr/local/bin/php /usr/bin/php \
		&& chmod +x /usr/local/bin/* \
# RUNTIME: add runtime group and user
		&& groupadd -g ${GID} ${USER} \
		&& useradd -d ${MOVIM_HOME} -m -g ${GID} -u ${UID} -s /sbin/nologin ${USER} \
		&& chown -R ${UID}:${GID} ${MOVIM_HOME} /tmp/* \
# CLEANUP: Remove source files, build dependencies, etc.
		&& apt-get remove -y \
			curl \
			wget \
		&& apt-mark auto '.*' > /dev/null \
		&& apt-mark manual $savedAptMark \
		&& ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so \
			| awk '/=>/ { print $3 }' \
			| sort -u \
			| xargs -r dpkg-query -S \
			| cut -d: -f1 \
			| sort -u \
			| xargs -rt apt-mark manual \
		&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
		&& rm -rf /var/lib/apt/lists/* /tmp/builder /tmp/pear

WORKDIR ${MOVIM_HOME}
EXPOSE 8080 9000
USER ${USER}
VOLUME ["${MOVIM_HOME}", "/tmp"]

ENTRYPOINT ["/usr/bin/tini","--","docker-entrypoint.sh"]
CMD ["/movim/daemon.php", "start"]
